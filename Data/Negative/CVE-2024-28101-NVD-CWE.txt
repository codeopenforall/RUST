pub(super) fn main_router<RF>(
    configuration: &Configuration,
) -> axum::Router<(), DecompressionBody<Body>>
where
    RF: RouterFactory,
{
    let mut router = Router::new().route(
        &configuration.supergraph.sanitized_path(),
        get({
            move |Extension(service): Extension<RF>, request: Request<DecompressionBody<Body>>| {
                handle_graphql(service.create().boxed(), request)
            }
        })
        .post({
            move |Extension(service): Extension<RF>, request: Request<DecompressionBody<Body>>| {
                handle_graphql(service.create().boxed(), request)
            }
        }),
    );

    if configuration.supergraph.path == "/*" {
        router = router.route(
            "/",
            get({
                move |Extension(service): Extension<RF>,
                      request: Request<DecompressionBody<Body>>| {
                    handle_graphql(service.create().boxed(), request)
                }
            })
            .post({
                move |Extension(service): Extension<RF>,
                      request: Request<DecompressionBody<Body>>| {
                    handle_graphql(service.create().boxed(), request)
                }
            }),
        );
    }

    router
}
async fn get_redirected_response(
    &self,
    url: impl reqwest::IntoUrl,
    mut maybe_header: Option<(HeaderName, HeaderValue)>,
  ) -> Result<reqwest::Response, DownloadError> {
    let mut url = url.into_url()?;
    let mut builder = self.get(url.clone());
    if let Some((header_name, header_value)) = maybe_header.as_ref() {
      builder = builder.header(header_name, header_value);
    }
    let mut response = builder.send().await?;
    let status = response.status();
    if status.is_redirection() {
      for _ in 0..5 {
        let new_url = resolve_redirect_from_response(&url, &response)?;
        let mut builder = self.get(new_url.clone());

        if new_url.origin() == url.origin() {
          if let Some((header_name, header_value)) = maybe_header.as_ref() {
            builder = builder.header(header_name, header_value);
          }
        } else {
          maybe_header = None;
        }

        let new_response = builder.send().await?;
        let status = new_response.status();
        if status.is_redirection() {
          response = new_response;
          url = new_url;
        } else {
          return Ok(new_response);
        }
      }
      Err(DownloadError::TooManyRedirects)
    } else {
      Ok(response)
    }
  }
}